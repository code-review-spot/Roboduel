// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Missile = (function(_super) {

    __extends(Missile, _super);

    function Missile() {
      this.move = __bind(this.move, this);

      this.step = __bind(this.step, this);
      return Missile.__super__.constructor.apply(this, arguments);
    }

    Missile.prototype.defaults = {
      hp: 1,
      damage: 10,
      x: 0,
      y: 0,
      dir: 0,
      frequency: 1000 / 30,
      arena: {
        width: 600,
        height: 600
      },
      width: 10,
      height: 4
    };

    Missile.prototype.maxX = function() {
      return this.attributes.arena.width - this.attributes.width;
    };

    Missile.prototype.minX = function() {
      return 0;
    };

    Missile.prototype.maxY = function() {
      return this.attributes.arena.height - this.attributes.height;
    };

    Missile.prototype.minY = function() {
      return 0;
    };

    Missile.prototype.deg = function() {
      return this.attributes.dir * 360 / Math.TAO;
    };

    Missile.prototype.dx = function() {
      return (Math.cos(this.get('dir'))) * 10;
    };

    Missile.prototype.dy = function() {
      return (Math.sin(this.get('dir'))) * 10;
    };

    Missile.prototype.initialize = function() {
      this.set('x', this.attributes.x - this.attributes.width / 2);
      this.set('y', this.attributes.y - this.attributes.height / 2);
      this.set('script', ["move"]);
      this.set('lineNum', 0);
      return this.start();
    };

    Missile.prototype.die = function() {
      if (this.noisy) {
        console.log("missile destroyed");
      }
      clearInterval(this.intervalID);
      this.destroy();
      return window.silo.remove(this);
    };

    Missile.prototype.start = function() {
      var _this = this;
      return this.intervalID = setInterval(function() {
        return _this.step();
      }, this.frequency);
    };

    Missile.prototype.step = function() {
      var command;
      command = this.attributes.script[this.attributes.lineNum];
      this[command]();
      if (this.noisy) {
        console.log("from Step()", this.attributes);
      }
      return this.attributes.lineNum = (this.attributes.lineNum + 1) % this.attributes.script.length;
    };

    Missile.prototype.move = function() {
      var newx, newy;
      newx = this.attributes.x + this.dx();
      if (newx > this.maxX()) {
        this.die();
      }
      if (newx < this.minX()) {
        this.die();
      }
      newy = this.attributes.y + this.dy();
      if (newy > this.maxY()) {
        this.die();
      }
      if (newy < this.minY()) {
        this.die();
      }
      this.set('x', newx);
      this.set('y', newy);
      if (this.noisy) {
        return console.log("from Step()", this.attributes);
      }
    };

    window.MissileView = (function(_super1) {

      __extends(MissileView, _super1);

      function MissileView() {
        this.initialize = __bind(this.initialize, this);
        return MissileView.__super__.constructor.apply(this, arguments);
      }

      MissileView.prototype.className = 'missile';

      MissileView.prototype.initialize = function() {
        this.listenTo(this.model, 'change', this.render);
        return this.listenTo(this.model, 'destroy', this.remove);
      };

      MissileView.prototype.render = function() {
        this.$el.html("");
        this.$el.css("left", this.model.get('x'));
        this.$el.css("top", this.model.get('y'));
        this.$el.css("transform", "rotate(" + this.model.deg() + "deg)");
        this.$el.appendTo('.arena');
        return this;
      };

      return MissileView;

    })(Backbone.View);

    return Missile;

  }).call(this, Backbone.Model);

}).call(this);
